1115. Average of Levels in Binary Tree
中文English
Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.

Example
Example 1:

Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].
Notice
The range of node's value is in the range of 32-bit signed integer.

///**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */

public class Solution {
    /**
     * @param root: the binary tree of the  root
     * @return: return a list of double
     */
    public List<Double> averageOfLevels(TreeNode root) {
     List<Double> list= new ArrayList<>();
        if(root==null) return list;
        list.add(Double.valueOf(root.val));
        Double average= Double.valueOf(root.right.val+root.left.val)/2;
        list.add(average);
        averageOfLevels(root.left);
        averageOfLevels(root.right);
        
        return list;
        
    }
}
//Console Logs
Exception in thread "main" java.lang.NullPointerException at Solution.averageOfLevels(Solution.java:22) at Solution.averageOfLevels(Solution.java:24) at Solution.averageOfLevels(Solution.java:24) at Main.main(Main.java:18)

//
